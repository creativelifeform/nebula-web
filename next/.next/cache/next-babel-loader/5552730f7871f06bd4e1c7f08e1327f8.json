{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/rohandeshpande/Projects/nebula-web/next/common/components/Header/Nav.js\";\nimport React, { Component } from 'react';\nimport { array, object } from 'prop-types';\nimport { faBars, faTimes } from '@fortawesome/free-solid-svg-icons';\nimport { DOWNLOAD_PATH } from '../../../common/constants';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport Link from 'next/link';\nimport { withContent } from '../../../common/utils';\nimport { withRouter } from 'next/router';\n\nconst Hamburger = ({\n  isOpen,\n  toggle\n}) => React.createElement(\"div\", {\n  className: \"Hamburger\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 12\n  },\n  __self: this\n}, React.createElement(FontAwesomeIcon, {\n  icon: isOpen ? faTimes : faBars,\n  className: isOpen ? 'fa-times' : 'fa-bars',\n  onClick: toggle,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 13\n  },\n  __self: this\n}));\n\nclass Nav extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      mobileMenuIsActive: false\n    });\n\n    _defineProperty(this, \"handleMobileMenuToggle\", e => {\n      const {\n        mobileMenuIsActive\n      } = this.state;\n      this.setState({\n        mobileMenuIsActive: !mobileMenuIsActive\n      });\n    });\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.location !== this.props.location) {\n      this.setState({\n        mobileMenuIsActive: false\n      });\n    }\n  }\n\n  render() {\n    const {\n      routes,\n      router,\n      content: {\n        callout\n      }\n    } = this.props;\n    const {\n      mobileMenuIsActive\n    } = this.state;\n    const activeClass = mobileMenuIsActive ? 'active' : '';\n    return React.createElement(\"nav\", {\n      className: \"Nav\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(Hamburger, {\n      isOpen: mobileMenuIsActive,\n      toggle: this.handleMobileMenuToggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: `ul-container ${activeClass}`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      className: `${activeClass}`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, routes.map(({\n      path,\n      name,\n      shouldHideFromNav\n    }, i) => shouldHideFromNav ? null : React.createElement(\"li\", {\n      key: i,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(Link, {\n      href: path,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, name))), React.createElement(\"li\", {\n      className: \"has-button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: () => router.push(DOWNLOAD_PATH),\n      className: \"small\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, callout.small)))));\n  }\n\n}\n\nNav.propTypes = {\n  routes: array.isRequired,\n  router: object.isRequired,\n  location: object.isRequired,\n  content: object.isRequired\n};\nexport default withRouter(withContent(Nav));","map":{"version":3,"sources":["/Users/rohandeshpande/Projects/nebula-web/next/common/components/Header/Nav.js"],"names":["React","Component","array","object","faBars","faTimes","DOWNLOAD_PATH","FontAwesomeIcon","Link","withContent","withRouter","Hamburger","isOpen","toggle","Nav","mobileMenuIsActive","e","state","setState","componentDidUpdate","prevProps","location","props","render","routes","router","content","callout","activeClass","handleMobileMenuToggle","map","path","name","shouldHideFromNav","i","push","small","propTypes","isRequired"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { array, object } from 'prop-types';\nimport { faBars, faTimes } from '@fortawesome/free-solid-svg-icons';\n\nimport { DOWNLOAD_PATH } from '../../../common/constants';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport Link from 'next/link';\nimport { withContent } from '../../../common/utils';\nimport { withRouter } from 'next/router';\n\nconst Hamburger = ({ isOpen, toggle }) => (\n  <div className=\"Hamburger\">\n    <FontAwesomeIcon\n      icon={isOpen ? faTimes : faBars}\n      className={isOpen ? 'fa-times' : 'fa-bars'}\n      onClick={toggle}\n    />\n  </div>\n);\n\nclass Nav extends Component {\n  state = {\n    mobileMenuIsActive: false,\n  };\n\n  handleMobileMenuToggle = e => {\n    const { mobileMenuIsActive } = this.state;\n\n    this.setState({ mobileMenuIsActive: !mobileMenuIsActive });\n  };\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.location !== this.props.location) {\n      this.setState({ mobileMenuIsActive: false });\n    }\n  }\n\n  render() {\n    const {\n      routes,\n      router,\n      content: { callout },\n    } = this.props;\n    const { mobileMenuIsActive } = this.state;\n    const activeClass = mobileMenuIsActive ? 'active' : '';\n\n    return (\n      <nav className=\"Nav\">\n        <Hamburger\n          isOpen={mobileMenuIsActive}\n          toggle={this.handleMobileMenuToggle}\n        />\n        <div className={`ul-container ${activeClass}`}>\n          <ul className={`${activeClass}`}>\n            {routes.map(({ path, name, shouldHideFromNav }, i) =>\n              shouldHideFromNav ? null : (\n                <li key={i}>\n                  <Link href={path}>{name}</Link>\n                </li>\n              )\n            )}\n            <li className=\"has-button\">\n              <button\n                onClick={() => router.push(DOWNLOAD_PATH)}\n                className=\"small\"\n              >\n                {callout.small}\n              </button>\n            </li>\n          </ul>\n        </div>\n      </nav>\n    );\n  }\n}\n\nNav.propTypes = {\n  routes: array.isRequired,\n  router: object.isRequired,\n  location: object.isRequired,\n  content: object.isRequired,\n};\n\nexport default withRouter(withContent(Nav));\n"]},"metadata":{},"sourceType":"module"}